name: Backend CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code and Define Variables
        uses: actions/checkout@v2

      - name: Set Terraform Variables
        run: |
          cd Terraform
          terraform init
        shell: bash

      - name: Archive Repository
        run: |
          zip -r build-artifact.zip .
        working-directory: ./

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: build-artifact.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifact

      - name: Unzip Artifact
        run: |
          cd /home/runner/work/TCRC-Backend/TCRC-Backend
          unzip -o build-artifact.zip -d .
        shell: bash

      - name: Deploy Backend
        run: |
          cd Terraform
          terraform apply -auto-approve || (terraform destroy -auto-approve && exit 1)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        shell: bash

      - name: Archive Repository
        run: |
          zip -r deploy-artifact.zip .
        working-directory: ./

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: deploy-artifact
          path: deploy-artifact.zip

  destroy:
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: destroy

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: deploy-artifact

      - name: Unzip Artifact
        run: |
          cd /home/runner/work/TCRC-Backend/TCRC-Backend
          unzip -o deploy-artifact.zip -d .
        shell: bash

      - name: Manual Destruction Confirmation
        run: |
          cd Terraform
          terraform destroy -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        shell: bash
